name: Example workflow for Maven using Snyk
on: push
jobs:
  snyk-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/maven@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  build-image-publish-to-dockerhub:
    needs: sonar-analysis
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn -B package --file pom.xml 
  
    -  name: Logging in Dockerhub
       uses: docker/login-action@v2
       with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag supriyohub/devsecops:latest
        
    - name: Docker Push
      run: docker push supriyohub/devsecops:latest

  sonar-analysis:
        needs: snyk-scan
        
        runs-on: ubuntu-latest
        steps:
          - uses: actions/checkout@v3
            with:
              fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          - name: Set up JDK 11
            uses: actions/setup-java@v3
            with:
              java-version: 11
              distribution: 'zulu' # Alternative distribution options are available.
          - name: Cache SonarCloud packages
            uses: actions/cache@v3
            with:
              path: ~/.sonar/cache
              key: ${{ runner.os }}-sonar
              restore-keys: ${{ runner.os }}-sonar
          - name: Cache Maven packages
            uses: actions/cache@v3
            with:
              path: ~/.m2
              key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
              restore-keys: ${{ runner.os }}-m2
          - name: Build and analyze
            env:
              GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}  # Needed to get PR information, if any
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Supriyo-Roy_project-2-devsecops
            
      zap_scan:
                runs-on: ubuntu-latest
                name: Scan the webapplication
                steps:
                  - name: Checkout
                    uses: actions/checkout@v2
                    with:
                      ref: master
                  - name: ZAP Scan
                    uses: zaproxy/action-full-scan@v0.4.0
                    with:
                      token: ${{ secrets.GIT_TOKEN }}
                      docker_name: 'owasp/zap2docker-stable'
                      target: 'https://www.zaproxy.org/'
                      rules_file_name: '.zap/rules.tsv'
                      cmd_options: '-a'